/* 
 * Honda de Mexico 2018
 * All rights reserved
 */
/**
 * Author:  Cesar Martinez <cesar_x_martinez@hdm.honda.com>
 * Created: Aug 17, 2018
 */

/**
 * NOTES: 
 *   - Run this Script logged as 'dcollectdb'.
 *
 *
 */

-- Generated by Oracle SQL Developer Data Modeler 17.3.0.261.1529
--   at:        2018-08-17 13:04:44 CDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE dcollectdb.dc_city (
	id                    INTEGER
		CONSTRAINT nnc_dccity_id NOT NULL,
	name                  VARCHAR2(50 CHAR)
		CONSTRAINT nnc_dccity_name NOT NULL,
	description           VARCHAR2(255 CHAR),
	dc_state_id           INTEGER
		CONSTRAINT nnc_dccity_dc_state_id NOT NULL,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dccity_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dccity_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_city ADD CONSTRAINT dc_city_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_city ADD CONSTRAINT dccity_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_client (
	id                    INTEGER
		CONSTRAINT nnc_dclien_id NOT NULL,
	rfc                   VARCHAR2(15 CHAR)
		CONSTRAINT nnc_dclien_rfc NOT NULL,
	first_name            VARCHAR2(40 CHAR)
		CONSTRAINT nnc_dclien_first_name NOT NULL,
	last_name             VARCHAR2(40 CHAR),
	last_name_b           VARCHAR2(40 CHAR),
	gender                VARCHAR2(1 CHAR),
	privacy               VARCHAR2(1 CHAR),
	email                 CHAR(120 CHAR),
	phone                 VARCHAR2(100 CHAR),
	addr_street           VARCHAR2(80 CHAR),
	addr_ext_num          VARCHAR2(10 CHAR),
	addr_int_num          VARCHAR2(10 CHAR),
	addr_neighborhood     VARCHAR2(80 CHAR),
	addr_postcode         VARCHAR2(6 CHAR),
	dc_city_id            INTEGER,
	dc_state_id           INTEGER,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dclien_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dclien_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_client ADD CONSTRAINT dc_client_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_contact (
	id                    INTEGER
		CONSTRAINT nnc_dcctc_id NOT NULL,
	alias                 VARCHAR2(25 CHAR)
		CONSTRAINT nnc_dcctc_alias NOT NULL,
	phone_number          VARCHAR2(20 CHAR),
	first_name            VARCHAR2(100 CHAR),
	last_name             VARCHAR2(100 CHAR),
	email                 VARCHAR2(50 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcctc_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcctc_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_contact ADD CONSTRAINT dc_contact_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_contact ADD CONSTRAINT dcctc_un1 UNIQUE ( alias );

CREATE TABLE dcollectdb.dc_contact_group (
	id                    INTEGER
		CONSTRAINT nnc_ctcgrp_id NOT NULL,
	name                  VARCHAR2(50 CHAR)
		CONSTRAINT nnc_ctcgrp_name NOT NULL,
	description           VARCHAR2(255 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_ctcgrp_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_ctcgrp_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_contact_group ADD CONSTRAINT dc_contact_group_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_contact_group ADD CONSTRAINT ctcgrp_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_contact_x_group (
	dc_contact_id         INTEGER
		CONSTRAINT nnc_ctxgrp_om_contact_id NOT NULL,
	dc_contact_group_id   INTEGER
		CONSTRAINT nnc_ctxgrp_dc_contact_grou NOT NULL
);

ALTER TABLE dcollectdb.dc_contact_x_group ADD CONSTRAINT dc_contact_x_group_pk PRIMARY KEY ( dc_contact_id,
dc_contact_group_id );

CREATE TABLE dcollectdb.dc_dealer (
	id                    INTEGER
		CONSTRAINT nnc_dcdeal_id NOT NULL,
	dealer_number         VARCHAR2(10 CHAR) NOT NULL,
	name                  VARCHAR2(100 CHAR)
		CONSTRAINT nnc_dcdeal_name NOT NULL,
	business_name         VARCHAR2(255 CHAR),
	rfc                   VARCHAR2(15 CHAR),
	addr_street           VARCHAR2(100 CHAR),
	addr_neighborhood     VARCHAR2(100 CHAR),
	addr_postcode         VARCHAR2(6 CHAR),
	dc_city_id            INTEGER
		CONSTRAINT nnc_dcdeal_dc_city_id NOT NULL,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcdeal_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcdeal_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_dealer ADD CONSTRAINT dc_dealer_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_dealer ADD CONSTRAINT dcdeal_un1 UNIQUE ( name );

ALTER TABLE dcollectdb.dc_dealer ADD CONSTRAINT dcdeal_un2 UNIQUE ( dealer_number );

CREATE TABLE dcollectdb.dc_employee (
	id                    INTEGER
		CONSTRAINT nnc_dcempl_id NOT NULL,
	first_name            VARCHAR2(100 CHAR),
	last_name             VARCHAR2(100 CHAR),
	employee_type         VARCHAR2(15 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcempl_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcempl_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_employee ADD CONSTRAINT dc_employee_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_employee_x_dealer (
	dc_employee_id   INTEGER
		CONSTRAINT nnc_dempxd_dc_employee_id NOT NULL,
	dc_dealer_id     INTEGER
		CONSTRAINT nnc_dempxd_dc_dealer_id NOT NULL
);

ALTER TABLE dcollectdb.dc_employee_x_dealer ADD CONSTRAINT dc_employee_x_dealer_pk PRIMARY KEY ( dc_employee_id,
dc_dealer_id );

CREATE TABLE dcollectdb.dc_error_code (
	id                    INTEGER
		CONSTRAINT nnc_derrc_id NOT NULL,
	code                  VARCHAR2(50 CHAR)
		CONSTRAINT nnc_derrc_name NOT NULL,
	description           VARCHAR2(510 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_derrc_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_derrc_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_error_code ADD CONSTRAINT dc_error_code_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_error_code ADD CONSTRAINT derrc_un1 UNIQUE ( code );

CREATE TABLE dcollectdb.dc_in_file_log_error (
	id                    INTEGER
		CONSTRAINT nnc_dferr_id NOT NULL,
	description           VARCHAR2(255 CHAR),
	dc_income_file_id     INTEGER
		CONSTRAINT nnc_dferr_dc_income_file_ NOT NULL,
	dc_error_code_id      INTEGER
		CONSTRAINT nnc_dferr_dc_error_code_i NOT NULL,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dferr_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dferr_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_in_file_log_error ADD CONSTRAINT dc_in_file_log_error_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_income_file (
	id                    INTEGER
		CONSTRAINT nnc_dcif_id NOT NULL,
	file_name             VARCHAR2(255 CHAR)
		CONSTRAINT nnc_dcif_file_name NOT NULL,
	length                INTEGER,
	dc_dealer_id          INTEGER
		CONSTRAINT nnc_dcif_dc_dealer_id NOT NULL,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcif_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcif_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_income_file ADD CONSTRAINT dc_income_file_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_invoice_status (
	id                    INTEGER
		CONSTRAINT nnc_dinst_id NOT NULL,
	name                  VARCHAR2(50 CHAR)
		CONSTRAINT nnc_dinst_name NOT NULL,
	description           VARCHAR2(255 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dinst_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dinst_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_invoice_status ADD CONSTRAINT dc_invoice_status_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_invoice_status ADD CONSTRAINT dinst_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_ldap_group (
	id                    INTEGER
		CONSTRAINT nnc_ldgrp_id NOT NULL,
	name                  VARCHAR2(50 CHAR),
	ldap_id               VARCHAR2(255 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_ldgrp_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_ldgrp_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_ldap_group ADD CONSTRAINT dc_ldap_group_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_ldap_group ADD CONSTRAINT ldgrp_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_ldapg_x_role (
	dc_ldap_group_id   INTEGER
		CONSTRAINT nnc_ldrole_om_ldap_group_i NOT NULL,
	dc_role_id         INTEGER
		CONSTRAINT nnc_ldrole_dc_role_id NOT NULL
);

ALTER TABLE dcollectdb.dc_ldapg_x_role ADD CONSTRAINT dc_ldapg_x_role_pk PRIMARY KEY ( dc_ldap_group_id,
dc_role_id );

CREATE TABLE dcollectdb.dc_model (
	id                    INTEGER
		CONSTRAINT nnc_dcmodel_id NOT NULL,
	code                  VARCHAR2(25 CHAR),
	brand                 VARCHAR2(10 CHAR),
	name                  VARCHAR2(20 CHAR),
	year                  VARCHAR2(4 CHAR),
	assembly_location     VARCHAR2(50 CHAR),
	ext_color_code        VARCHAR2(15 CHAR),
	ext_color_name        VARCHAR2(60 CHAR),
	int_color_code        VARCHAR2(15 CHAR),
	description           VARCHAR2(50 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcmodel_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcmodel_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_model ADD CONSTRAINT dc_model_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_month_fin_info (
	id                     INTEGER
		CONSTRAINT nnc_dmfi_id NOT NULL,
	month_total_expenses   NUMBER(13,4),
	month_sell_expenses    NUMBER(13,4),
	month_profit           NUMBER(13,4),
	month_labor_sum        NUMBER(13,4),
	month_number           SMALLINT,
	year_number            SMALLINT,
	dc_dealer_id           INTEGER
		CONSTRAINT nnc_dmfi_dc_dealer_id NOT NULL,
	dc_record_status_id    INTEGER
		CONSTRAINT nnc_dmfi_dc_record_statu NOT NULL,
	create_timestamp       TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dmfi_create_timestam NOT NULL,
	update_timestamp       TIMESTAMP
);

ALTER TABLE dcollectdb.dc_month_fin_info ADD CONSTRAINT dc_month_finance_info_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_operation_code (
	id                    INTEGER
		CONSTRAINT nnc_dopc_id NOT NULL,
	code                  VARCHAR2(10 CHAR)
		CONSTRAINT nnc_dopc_name NOT NULL,
	description           VARCHAR2(255 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dopc_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dopc_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_operation_code ADD CONSTRAINT dc_operation_code_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_operation_code ADD CONSTRAINT dopc_un1 UNIQUE ( code );

CREATE TABLE dcollectdb.dc_order_status (
	id                    INTEGER
		CONSTRAINT nnc_dcorst_id NOT NULL,
	name                  VARCHAR2(50 CHAR)
		CONSTRAINT nnc_dcorst_name NOT NULL,
	description           VARCHAR2(255 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcorst_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcorst_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_order_status ADD CONSTRAINT dc_order_status_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_order_status ADD CONSTRAINT dcorst_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_order_type (
	id                    INTEGER
		CONSTRAINT nnc_dcordt_id NOT NULL,
	code                  VARCHAR2(5 CHAR)
		CONSTRAINT nnc_dcordt_code NOT NULL,
	description           VARCHAR2(50 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcordt_dc_record_statu NOT NULL,
	create_timestamp     TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcordt_create_timestam NOT NULL,
	update_timestamp     TIMESTAMP
);

ALTER TABLE dcollectdb.dc_order_type ADD CONSTRAINT dc_order_type_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_order_type ADD CONSTRAINT dcordt_un1 UNIQUE ( code );

CREATE TABLE dcollectdb.dc_record_status (
	id                 INTEGER
		CONSTRAINT nnc_recst_id NOT NULL,
	name               VARCHAR2(25 CHAR)
		CONSTRAINT nnc_recst_name NOT NULL,
	description        VARCHAR2(255 CHAR),
	create_timestamp   TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_recst_create_timestam NOT NULL,
	update_timestamp   TIMESTAMP
);

COMMENT ON TABLE dcollectdb.dc_record_status IS
	'Stores the possible statuses for database records. Programmers should avoid deleting records, they must change the record status instead.'
;

COMMENT ON COLUMN dcollectdb.dc_record_status.id IS
	'Primary Key';

COMMENT ON COLUMN dcollectdb.dc_record_status.name IS
	'Name of status';

COMMENT ON COLUMN dcollectdb.dc_record_status.description IS
	'status description';

COMMENT ON COLUMN dcollectdb.dc_record_status.create_timestamp IS
	'record creation timestamp';

COMMENT ON COLUMN dcollectdb.dc_record_status.update_timestamp IS
	'record update timestamp';

ALTER TABLE dcollectdb.dc_record_status ADD CONSTRAINT dc_record_status_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_record_status ADD CONSTRAINT recst_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_role (
	id                    INTEGER
		CONSTRAINT nnc_dcrole_id NOT NULL,
	name                  VARCHAR2(50 CHAR)
		CONSTRAINT nnc_dcrole_name NOT NULL,
	description           VARCHAR2(255 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcrole_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcrole_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_role ADD CONSTRAINT dc_role_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_role ADD CONSTRAINT dcrole_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_state (
	id                    INTEGER
		CONSTRAINT nnc_dcstate_dcstate_id NOT NULL,
	name                  VARCHAR2(50 CHAR)
		CONSTRAINT nnc_dcstate_name NOT NULL,
	description           VARCHAR2(255 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcstate_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcstate_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_state ADD CONSTRAINT dc_state_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_state ADD CONSTRAINT dcstate_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_svc_invoice (
	id                     INTEGER
		CONSTRAINT nnc_dsvi_id NOT NULL,
	folio                  VARCHAR2(10 CHAR),
	"date"                 DATE,
	customer_name          VARCHAR2(100 CHAR),
	addr_postcode          VARCHAR2(6 CHAR),
	total                  NUMBER(13,4),
	customer_rfc           VARCHAR2(15 CHAR),
	invoice_uuid           VARCHAR2(32 CHAR),
	dc_invoice_status_id   INTEGER
		CONSTRAINT nnc_dsvi_dc_invoice_stat NOT NULL,
	dc_svc_order_vin_id    INTEGER
		CONSTRAINT nnc_dsvi_dc_svc_order_vi NOT NULL,
	dc_record_status_id    INTEGER
		CONSTRAINT nnc_dsvi_dc_record_statu NOT NULL,
	create_timestamp       TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dsvi_create_timestam NOT NULL,
	update_timestamp       TIMESTAMP
);

ALTER TABLE dcollectdb.dc_svc_invoice ADD CONSTRAINT dc_svc_invoice_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_svc_labor (
	id                     INTEGER
		CONSTRAINT nnc_dclab_id NOT NULL,
	description            VARCHAR2(255 CHAR),
	hours                  NUMBER(5,2),
	unit_price             NUMBER(13,4),
	subtotal               NUMBER(13,4),
	discount_percent       NUMBER(5,2),
	discount_amount        NUMBER(13,4),
	net_total              NUMBER(13,4),
	labor_cost             NUMBER(13,4),
	dpts_technician        VARCHAR2(7 CHAR),
	dc_operation_code_id   INTEGER
		CONSTRAINT nnc_dclab_dc_operation_co NOT NULL,
	dc_svc_order_vin_id    INTEGER
		CONSTRAINT nnc_dclab_dc_svc_order_vi NOT NULL,
	dc_record_status_id    INTEGER
		CONSTRAINT nnc_dclab_dc_record_statu NOT NULL,
	create_timestamp       TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dclab_create_timestam NOT NULL,
	update_timestamp       TIMESTAMP
);

ALTER TABLE dcollectdb.dc_svc_labor ADD CONSTRAINT dc_svc_labor_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_svc_order_vin (
	id                    INTEGER
		CONSTRAINT nnc_dcsov_id NOT NULL,
	svc_order_num         VARCHAR2(20 CHAR),
	dc_dealer_id          INTEGER
		CONSTRAINT nnc_dcsov_dc_dealer_id NOT NULL,
	dc_order_type_id      INTEGER
		CONSTRAINT nnc_dcsov_dc_order_type_i NOT NULL,
	dc_model_id           INTEGER
		CONSTRAINT nnc_dcsov_dc_model_id NOT NULL,
	dc_client_id          INTEGER
		CONSTRAINT nnc_dcsov_dc_client_id NOT NULL,
	mileage               NUMBER,
	vin                   VARCHAR2(17 CHAR),
	license_plate         VARCHAR2(15 CHAR),
	ein                   VARCHAR2(15 CHAR),
	dc_order_status_id    INTEGER
		CONSTRAINT nnc_dcsov_dc_order_status NOT NULL,
	dpts_assessor         VARCHAR2(7 CHAR),
	date_open             DATE,
	date_close            DATE,
	dc_income_file_id     INTEGER
		CONSTRAINT nnc_dcsov_dc_income_file_ NOT NULL,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcsov_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcsov_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

COMMENT ON COLUMN dcollectdb.dc_svc_order_vin.vin IS
	'Vehicle Identification Number VIN';

COMMENT ON COLUMN dcollectdb.dc_svc_order_vin.ein IS
	'Engine Identification Number EIN';

ALTER TABLE dcollectdb.dc_svc_order_vin ADD CONSTRAINT dc_svc_order_vin_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_svc_part (
	id                    INTEGER
		CONSTRAINT nnc_dspr_id NOT NULL,
	part_number           VARCHAR2(20 CHAR)
		CONSTRAINT nnc_dspr_part_number NOT NULL,
	description           VARCHAR2(255 CHAR),
	quantity              SMALLINT,
	list_price            NUMBER(13,4),
	subtotal              NUMBER(13,4),
	discount_percent      NUMBER(5,2),
	discount_amount       NUMBER(13,4),
	net_total             NUMBER(13,4),
	dc_svc_order_vin_id   INTEGER
		CONSTRAINT nnc_dspr_dc_svc_order_vi NOT NULL,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dspr_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dspr_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_svc_part ADD CONSTRAINT dc_svc_part_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_svc_total (
	dsto_id               INTEGER
		CONSTRAINT nnc_dsto_dsto_id NOT NULL,
	labor_total           NUMBER(13,4),
	part_total            NUMBER(13,4),
	discount_total        NUMBER(13,4),
	subtotal              NUMBER(13,4),
	tax_total             NUMBER(13,4),
	net_total             NUMBER(13,4),
	dc_svc_order_vin_id   INTEGER
		CONSTRAINT nnc_dsto_tax_amount NOT NULL,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dsto_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dsto_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_svc_total ADD CONSTRAINT dc_svc_total_pk PRIMARY KEY ( dsto_id );

ALTER TABLE dcollectdb.dc_svc_total ADD CONSTRAINT dsto_un1 UNIQUE ( dc_svc_order_vin_id );

CREATE TABLE dcollectdb.dc_terchief (
	id                    INTEGER
		CONSTRAINT nnc_dcterc_id NOT NULL,
	first_name            VARCHAR2(50 CHAR)
		CONSTRAINT nnc_dcterc_first_name NOT NULL,
	last_name             VARCHAR2(50 CHAR),
	notes                 VARCHAR2(50 CHAR),
	dms_name              VARCHAR2(25 CHAR),
	dc_contact_group_id   INTEGER
		CONSTRAINT nnc_dcterc_dc_contact_grou NOT NULL,
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcterc_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcterc_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

COMMENT ON COLUMN dcollectdb.dc_terchief.dms_name IS
	'the DMS System name used by dealers';

ALTER TABLE dcollectdb.dc_terchief ADD CONSTRAINT dc_terchief_pk PRIMARY KEY ( id );

CREATE TABLE dcollectdb.dc_terchief_x_dealer (
	dc_terchief_id   INTEGER
		CONSTRAINT nnc_dtcxde_dc_terchief_id NOT NULL,
	dc_dealer_id     INTEGER
		CONSTRAINT nnc_dtcxde_dc_dealer_id NOT NULL
);

ALTER TABLE dcollectdb.dc_terchief_x_dealer ADD CONSTRAINT dc_terchief_x_dealer_pk PRIMARY KEY ( dc_terchief_id,
dc_dealer_id );

CREATE TABLE dcollectdb.dc_user (
	id                    INTEGER
		CONSTRAINT nnc_dcuser_id NOT NULL,
	user_name             VARCHAR2(50 CHAR),
	account_type          VARCHAR2(10 CHAR) DEFAULT 'LDAP',
	password              VARCHAR2(1024 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcuser_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcuser_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_user
	ADD CONSTRAINT ck_dcuser_account_type CHECK ( account_type IN (
		'BUILT-IN',
		'LDAP'
	) );

CREATE INDEX dcollectdb.dcuser_idx1 ON
	dcollectdb.dc_user ( user_name ASC );

ALTER TABLE dcollectdb.dc_user ADD CONSTRAINT dc_user_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_user ADD CONSTRAINT dcuser_un1 UNIQUE ( user_name );

CREATE TABLE dcollectdb.dc_user_x_role (
	dc_user_id   INTEGER
		CONSTRAINT nnc_usrole_om_user_id NOT NULL,
	dc_role_id   INTEGER
		CONSTRAINT nnc_usrole_om_role_id NOT NULL
);

ALTER TABLE dcollectdb.dc_user_x_role ADD CONSTRAINT dc_user_x_role_pk PRIMARY KEY ( dc_user_id,
dc_role_id );

CREATE TABLE dcollectdb.dc_view (
	id                    INTEGER
		CONSTRAINT nnc_dcview_id NOT NULL,
	name                  VARCHAR2(50 CHAR)
		CONSTRAINT nnc_dcview_name NOT NULL,
	description           VARCHAR2(255 CHAR),
	url_pattern           VARCHAR2(255 CHAR),
	dc_record_status_id   INTEGER
		CONSTRAINT nnc_dcview_dc_record_statu NOT NULL,
	create_timestamp      TIMESTAMP DEFAULT current_timestamp
		CONSTRAINT nnc_dcview_create_timestam NOT NULL,
	update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_view ADD CONSTRAINT dc_view_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_view ADD CONSTRAINT dcview_un1 UNIQUE ( name );

CREATE TABLE dcollectdb.dc_view_access (
	dc_view_id   INTEGER
		CONSTRAINT nnc_vacces_om_view_id NOT NULL,
	dc_role_id   INTEGER
		CONSTRAINT nnc_vacces_om_role_id NOT NULL
);

ALTER TABLE dcollectdb.dc_view_access ADD CONSTRAINT dc_view_access_pk PRIMARY KEY ( dc_view_id,
dc_role_id );

ALTER TABLE dcollectdb.dc_contact_group
	ADD CONSTRAINT ctcgrp_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_contact_x_group
	ADD CONSTRAINT ctxgrp_ctcgrp_fk1 FOREIGN KEY ( dc_contact_group_id )
		REFERENCES dcollectdb.dc_contact_group ( id );

ALTER TABLE dcollectdb.dc_contact_x_group
	ADD CONSTRAINT ctxgrp_dcctc_fk2 FOREIGN KEY ( dc_contact_id )
		REFERENCES dcollectdb.dc_contact ( id );

ALTER TABLE dcollectdb.dc_city
	ADD CONSTRAINT dccity_dcstate_fk2 FOREIGN KEY ( dc_state_id )
		REFERENCES dcollectdb.dc_state ( id );

ALTER TABLE dcollectdb.dc_city
	ADD CONSTRAINT dccity_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_contact
	ADD CONSTRAINT dcctc_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_dealer
	ADD CONSTRAINT dcdeal_dccity_fk2 FOREIGN KEY ( dc_city_id )
		REFERENCES dcollectdb.dc_city ( id );

ALTER TABLE dcollectdb.dc_dealer
	ADD CONSTRAINT dcdeal_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_employee
	ADD CONSTRAINT dcempl_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_income_file
	ADD CONSTRAINT dcif_dcdeal_fk2 FOREIGN KEY ( dc_dealer_id )
		REFERENCES dcollectdb.dc_dealer ( id );

ALTER TABLE dcollectdb.dc_income_file
	ADD CONSTRAINT dcif_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_svc_labor
	ADD CONSTRAINT dclab_dcsov_fk1 FOREIGN KEY ( dc_svc_order_vin_id )
		REFERENCES dcollectdb.dc_svc_order_vin ( id );

ALTER TABLE dcollectdb.dc_svc_labor
	ADD CONSTRAINT dclab_dopc_fk2 FOREIGN KEY ( dc_operation_code_id )
		REFERENCES dcollectdb.dc_operation_code ( id );

ALTER TABLE dcollectdb.dc_svc_labor
	ADD CONSTRAINT dclab_recst_fk3 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_client
	ADD CONSTRAINT dclien_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_model
	ADD CONSTRAINT dcmodel_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_order_type
	ADD CONSTRAINT dcordt_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_order_status
	ADD CONSTRAINT dcorst_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_role
	ADD CONSTRAINT dcrole_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_svc_order_vin
	ADD CONSTRAINT dcsov_dcdeal_fk1 FOREIGN KEY ( dc_dealer_id )
		REFERENCES dcollectdb.dc_dealer ( id );

ALTER TABLE dcollectdb.dc_svc_order_vin
	ADD CONSTRAINT dcsov_dcif_fk7 FOREIGN KEY ( dc_income_file_id )
		REFERENCES dcollectdb.dc_income_file ( id );

ALTER TABLE dcollectdb.dc_svc_order_vin
	ADD CONSTRAINT dcsov_dclien_fk2 FOREIGN KEY ( dc_client_id )
		REFERENCES dcollectdb.dc_client ( id );

ALTER TABLE dcollectdb.dc_svc_order_vin
	ADD CONSTRAINT dcsov_dcmodel_fk3 FOREIGN KEY ( dc_model_id )
		REFERENCES dcollectdb.dc_model ( id );

ALTER TABLE dcollectdb.dc_svc_order_vin
	ADD CONSTRAINT dcsov_dcordt_fk4 FOREIGN KEY ( dc_order_type_id )
		REFERENCES dcollectdb.dc_order_type ( id );

ALTER TABLE dcollectdb.dc_svc_order_vin
	ADD CONSTRAINT dcsov_dcorst_fk5 FOREIGN KEY ( dc_order_status_id )
		REFERENCES dcollectdb.dc_order_status ( id );

ALTER TABLE dcollectdb.dc_svc_order_vin
	ADD CONSTRAINT dcsov_recst_fk6 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_state
	ADD CONSTRAINT dcstate_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_terchief
	ADD CONSTRAINT dcterc_ctcgrp_fk2 FOREIGN KEY ( dc_contact_group_id )
		REFERENCES dcollectdb.dc_contact_group ( id );

ALTER TABLE dcollectdb.dc_terchief
	ADD CONSTRAINT dcterc_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_user
	ADD CONSTRAINT dcuser_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_view
	ADD CONSTRAINT dcview_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_employee_x_dealer
	ADD CONSTRAINT dempxd_dcdeal_fk1 FOREIGN KEY ( dc_dealer_id )
		REFERENCES dcollectdb.dc_dealer ( id );

ALTER TABLE dcollectdb.dc_employee_x_dealer
	ADD CONSTRAINT dempxd_dcempl_fk2 FOREIGN KEY ( dc_employee_id )
		REFERENCES dcollectdb.dc_employee ( id );

ALTER TABLE dcollectdb.dc_error_code
	ADD CONSTRAINT derrc_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_in_file_log_error
	ADD CONSTRAINT dferr_dcif_fk1 FOREIGN KEY ( dc_income_file_id )
		REFERENCES dcollectdb.dc_income_file ( id );

ALTER TABLE dcollectdb.dc_in_file_log_error
	ADD CONSTRAINT dferr_derrc_fk3 FOREIGN KEY ( dc_error_code_id )
		REFERENCES dcollectdb.dc_error_code ( id );

ALTER TABLE dcollectdb.dc_in_file_log_error
	ADD CONSTRAINT dferr_recst_fk2 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_invoice_status
	ADD CONSTRAINT dinst_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_month_fin_info
	ADD CONSTRAINT dmfi_dcdeal_fk2 FOREIGN KEY ( dc_dealer_id )
		REFERENCES dcollectdb.dc_dealer ( id );

ALTER TABLE dcollectdb.dc_month_fin_info
	ADD CONSTRAINT dmfi_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_operation_code
	ADD CONSTRAINT dopc_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_svc_part
	ADD CONSTRAINT dspr_dcsov_fk1 FOREIGN KEY ( dc_svc_order_vin_id )
		REFERENCES dcollectdb.dc_svc_order_vin ( id );

ALTER TABLE dcollectdb.dc_svc_part
	ADD CONSTRAINT dspr_recst_fk2 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_svc_total
	ADD CONSTRAINT dsto_dcsov_fk1 FOREIGN KEY ( dc_svc_order_vin_id )
		REFERENCES dcollectdb.dc_svc_order_vin ( id );

ALTER TABLE dcollectdb.dc_svc_total
	ADD CONSTRAINT dsto_recst_fk2 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_svc_invoice
	ADD CONSTRAINT dsvi_dcsov_fk1 FOREIGN KEY ( dc_svc_order_vin_id )
		REFERENCES dcollectdb.dc_svc_order_vin ( id );

ALTER TABLE dcollectdb.dc_svc_invoice
	ADD CONSTRAINT dsvi_dinst_fk3 FOREIGN KEY ( dc_invoice_status_id )
		REFERENCES dcollectdb.dc_invoice_status ( id );

ALTER TABLE dcollectdb.dc_svc_invoice
	ADD CONSTRAINT dsvi_recst_fk2 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_terchief_x_dealer
	ADD CONSTRAINT dtcxde_dcdeal_fk2 FOREIGN KEY ( dc_dealer_id )
		REFERENCES dcollectdb.dc_dealer ( id );

ALTER TABLE dcollectdb.dc_terchief_x_dealer
	ADD CONSTRAINT dtcxde_dcterc_fk1 FOREIGN KEY ( dc_terchief_id )
		REFERENCES dcollectdb.dc_terchief ( id );

ALTER TABLE dcollectdb.dc_ldap_group
	ADD CONSTRAINT ldgrp_recst_fk1 FOREIGN KEY ( dc_record_status_id )
		REFERENCES dcollectdb.dc_record_status ( id );

ALTER TABLE dcollectdb.dc_ldapg_x_role
	ADD CONSTRAINT ldrole_dcrole_fk1 FOREIGN KEY ( dc_role_id )
		REFERENCES dcollectdb.dc_role ( id );

ALTER TABLE dcollectdb.dc_ldapg_x_role
	ADD CONSTRAINT ldrole_ldgrp_fk2 FOREIGN KEY ( dc_ldap_group_id )
		REFERENCES dcollectdb.dc_ldap_group ( id );

ALTER TABLE dcollectdb.dc_user_x_role
	ADD CONSTRAINT usrole_dcrole_fk1 FOREIGN KEY ( dc_role_id )
		REFERENCES dcollectdb.dc_role ( id );

ALTER TABLE dcollectdb.dc_user_x_role
	ADD CONSTRAINT usrole_dcuser_fk2 FOREIGN KEY ( dc_user_id )
		REFERENCES dcollectdb.dc_user ( id );

ALTER TABLE dcollectdb.dc_view_access
	ADD CONSTRAINT vacces_dcrole_fk2 FOREIGN KEY ( dc_role_id )
		REFERENCES dcollectdb.dc_role ( id );

ALTER TABLE dcollectdb.dc_view_access
	ADD CONSTRAINT vacces_dcview_fk1 FOREIGN KEY ( dc_view_id )
		REFERENCES dcollectdb.dc_view ( id );

CREATE SEQUENCE dcollectdb.dccity_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dccity_id_trg BEFORE
	INSERT ON dcollectdb.dc_city
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dccity_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dclien_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dclien_id_trg BEFORE
	INSERT ON dcollectdb.dc_client
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dclien_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcctc_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcctc_id_trg BEFORE
	INSERT ON dcollectdb.dc_contact
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcctc_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.ctcgrp_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.ctcgrp_id_trg BEFORE
	INSERT ON dcollectdb.dc_contact_group
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.ctcgrp_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcdeal_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcdeal_id_trg BEFORE
	INSERT ON dcollectdb.dc_dealer
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcdeal_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcempl_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcempl_id_trg BEFORE
	INSERT ON dcollectdb.dc_employee
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcempl_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.derrc_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.derrc_id_trg BEFORE
	INSERT ON dcollectdb.dc_error_code
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.derrc_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dferr_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dferr_id_trg BEFORE
	INSERT ON dcollectdb.dc_in_file_log_error
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dferr_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcif_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcif_id_trg BEFORE
	INSERT ON dcollectdb.dc_income_file
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcif_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dinst_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dinst_id_trg BEFORE
	INSERT ON dcollectdb.dc_invoice_status
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dinst_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.ldgrp_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.ldgrp_id_trg BEFORE
	INSERT ON dcollectdb.dc_ldap_group
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.ldgrp_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcmodel_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcmodel_id_trg BEFORE
	INSERT ON dcollectdb.dc_model
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcmodel_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dmfi_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dmfi_id_trg BEFORE
	INSERT ON dcollectdb.dc_month_fin_info
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dmfi_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dopc_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dopc_id_trg BEFORE
	INSERT ON dcollectdb.dc_operation_code
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dopc_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcorst_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcorst_id_trg BEFORE
	INSERT ON dcollectdb.dc_order_status
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcorst_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcordt_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcordt_id_trg BEFORE
	INSERT ON dcollectdb.dc_order_type
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcordt_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.recst_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.recst_id_trg BEFORE
	INSERT ON dcollectdb.dc_record_status
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.recst_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcrole_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcrole_id_trg BEFORE
	INSERT ON dcollectdb.dc_role
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcrole_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcstate_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcstate_id_trg BEFORE
	INSERT ON dcollectdb.dc_state
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcstate_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dsvi_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dsvi_id_trg BEFORE
	INSERT ON dcollectdb.dc_svc_invoice
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dsvi_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dclab_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dclab_id_trg BEFORE
	INSERT ON dcollectdb.dc_svc_labor
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dclab_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcsov_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcsov_id_trg BEFORE
	INSERT ON dcollectdb.dc_svc_order_vin
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcsov_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dspr_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dspr_id_trg BEFORE
	INSERT ON dcollectdb.dc_svc_part
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dspr_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dsto_dsto_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dsto_dsto_id_trg BEFORE
	INSERT ON dcollectdb.dc_svc_total
	FOR EACH ROW
	WHEN ( new.dsto_id IS NULL )
BEGIN
	:new.dsto_id := dcollectdb.dsto_dsto_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcterc_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcterc_id_trg BEFORE
	INSERT ON dcollectdb.dc_terchief
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcterc_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcuser_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcuser_id_trg BEFORE
	INSERT ON dcollectdb.dc_user
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcuser_id_seq.nextval;
END;

CREATE SEQUENCE dcollectdb.dcview_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dcollectdb.dcview_id_trg BEFORE
	INSERT ON dcollectdb.dc_view
	FOR EACH ROW
	WHEN ( new.id IS NULL )
BEGIN
	:new.id := dcollectdb.dcview_id_seq.nextval;
END;

CREATE OR REPLACE TRIGGER dcollectdb.dccity_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_city
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dclien_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_client
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcctc_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_contact
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.ctcgrp_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_contact_group
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcdeal_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_dealer
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcempl_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_employee
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.derrc_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_error_code
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dferr_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_in_file_log_error
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcif_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_income_file
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dinst_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_invoice_status
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.ldgrp_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_ldap_group
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcmodel_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_model
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dmfi_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_month_fin_info
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dopc_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_operation_code
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcorst_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_order_status
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcordt_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_order_type
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.recst_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_record_status
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcrole_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_role
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcstate_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_state
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dsvi_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_svc_invoice
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dclab_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_svc_labor
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcsov_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_svc_order_vin
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dspr_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_svc_part
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dsto_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_svc_total
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcterc_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_terchief
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcuser_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_user
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;

CREATE OR REPLACE TRIGGER dcollectdb.dcview_upd_trg BEFORE
	UPDATE ON dcollectdb.dc_view
	FOR EACH ROW
BEGIN
	SELECT
		SYSDATE
	INTO
		:new.update_timestamp
	FROM
		sys.dual;

END;


/*
* ===========================================================================
* FROM HERE
* MANUALLY CREATED SCRIPTS
*/

--- grant privileges on tables to adm user
GRANT ALL PRIVILEGES ON dcollectdb.dc_city to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_client to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_contact to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_contact_group to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_contact_x_group to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_dealer to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_employee to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_employee_x_dealer to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_error_code to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_in_file_log_error to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_income_file to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_invoice_status to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_ldap_group to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_ldapg_x_role to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_model to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_month_fin_info to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_operation_code to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_order_status to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_order_type to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_record_status to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_role to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_state to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_svc_invoice to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_svc_labor to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_svc_order_vin to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_svc_part to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_svc_total to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_terchief to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_terchief_x_dealer to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_user to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_user_x_role to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_view to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dc_view_access to dcollectadm;

--- grant priviles on sequences to adm user
GRANT ALL PRIVILEGES ON dcollectdb.dccity_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dclien_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcctc_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.ctcgrp_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcdeal_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcempl_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.derrc_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dferr_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcif_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dinst_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.ldgrp_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcmodel_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dmfi_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dopc_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcorst_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcordt_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.recst_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcrole_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcstate_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dsvi_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dclab_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcsov_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dspr_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dsto_dsto_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcterc_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcuser_id_seq to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.dcview_id_seq to dcollectadm;

--- AUTO-UPDATING TRIGGER for update_timestamp field that were not created
--- ...



/*
 * Entity Record Status
 */
INSERT INTO dcollectdb.DC_RECORD_STATUS (NAME, DESCRIPTION)
    VALUES ('enabled','Enabled Record Status');
INSERT INTO dcollectdb.DC_RECORD_STATUS (NAME, DESCRIPTION)
    VALUES ('disabled','Temporary Disabled Record Status');
INSERT INTO dcollectdb.DC_RECORD_STATUS (NAME, DESCRIPTION)
    VALUES ('deleted','Soft-Deleted Record Status');

/*
 * Initial Roles
 */
INSERT INTO dcollectdb.DC_ROLE (NAME, DESCRIPTION, dc_record_status_id)
    VALUES('ROLE_ADMIN', 'Global Administrator', 1);
INSERT INTO dcollectdb.DC_ROLE (NAME, DESCRIPTION, dc_record_status_id)
    VALUES('ROLE_USER', 'Application User', 1);


/*
* Initial catalogue values
*/

INSERT INTO DCOLLECTDB.DC_STATE (NAME, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('N/A', 'Not Assigned', 1);
INSERT INTO DCOLLECTDB.DC_CITY (NAME, DESCRIPTION, DC_STATE_ID, DC_RECORD_STATUS_ID) VALUES( 'N/A', 'Not Assigned', 1, 1);

INSERT INTO DCOLLECTDB.DC_ORDER_TYPE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('P', 'Ordenes Publico', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_TYPE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('G', 'Ordenes Garantia', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_TYPE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('I', 'Ordenes Internas', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_TYPE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('S', 'Ordenes de Seguros', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_TYPE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('O', 'Otro tipo de Ordenes (empleados, cortesias, etc)', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_TYPE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('VM', 'Venta refacciones mostrador', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_TYPE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('VMY', 'Venta refacciones mayoreo', 1);

INSERT INTO DCOLLECTDB.DC_ORDER_STATUS (NAME, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('1 - Abierta', 'Abierta', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_STATUS (NAME, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('2 - Cancelada', 'Cancelada', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_STATUS (NAME, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('3 - Cerrada sin F', 'Cerrada sin facturar', 1);
INSERT INTO DCOLLECTDB.DC_ORDER_STATUS (NAME, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('4- Cerrada con F', 'Cerrada Facturada', 1);

INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('5K', '5000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('10K', '10000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('15K', '15000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('20K', '20000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('25K', '25000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('30K', '30000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('35K', '35000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('40K', '40000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('45K', '45000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('50K', '50000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('55K', '55000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('60K', '60000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('65K', '65000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('70K', '70000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('75K', '75000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('80K', '80000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('85K', '85000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('90K', '90000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('95K', '95000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('100K', '100000 Km', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('R', 'Operaciones de Reparacion', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('G', 'Operaciones de Garantia', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('T', 'Operaciones en otro taller', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('BP', 'Operaciones de Laminado y Pintura', 1);
INSERT INTO DCOLLECTDB.DC_OPERATION_CODE (CODE, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('I', 'Operaciones Internas', 1);

INSERT INTO DCOLLECTDB.DC_INVOICE_STATUS (NAME, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('A', 'Alta', 1);
INSERT INTO DCOLLECTDB.DC_INVOICE_STATUS (NAME, DESCRIPTION, DC_RECORD_STATUS_ID) VALUES('C', 'Cancelada', 1);

COMMIT;