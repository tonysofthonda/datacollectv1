-- Modifications Summary
-- [‎10/‎12/‎2018 8:43 AM]  Diego Castro:  

-- Dropped
-- dc_contact_x_group 
-- dc_contact_group 
-- dc_terchief_x_dealer 

-- Modified
--   dc_contact 
--   dc_terchief 
--   dc_dealer 

-- Created
--  dc_contact_x_dealer 
--  dc_contact_x_terchief 
--  dc_dealer_group 

-- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0756
--   at:        2018-10-10 18:00:39 CDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

DROP TABLE dcollectdb.dc_contact_x_group;

ALTER TABLE dcollectdb.dc_terchief DROP COLUMN dc_contact_group_id;                                  

DROP TABLE dcollectdb.dc_terchief_x_dealer; 

DROP TABLE dcollectdb.dc_contact;    

DROP TABLE dcollectdb.dc_contact_group;                                                    
                                                                                                   
CREATE TABLE dcollectdb.dc_contact (
    id                    INTEGER
        CONSTRAINT nnc_dcctc_id NOT NULL,
    phone_number          VARCHAR2(20 CHAR),
    first_name            VARCHAR2(100 CHAR),
    last_name             VARCHAR2(100 CHAR),
    email                 VARCHAR2(50 CHAR),
    notes                 VARCHAR2(50),
    dc_record_status_id   INTEGER
        CONSTRAINT nnc_dcctc_dc_record_statu NOT NULL,
    create_timestamp      TIMESTAMP DEFAULT current_timestamp
        CONSTRAINT nnc_dcctc_create_timestam NOT NULL,
    update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_contact ADD CONSTRAINT dc_contact_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_contact ADD CONSTRAINT dcctc_un1 UNIQUE ( email );

ALTER TABLE dcollectdb.dc_contact
    ADD CONSTRAINT dcctc_recst_fk1 FOREIGN KEY ( dc_record_status_id )
        REFERENCES dcollectdb.dc_record_status ( id );

CREATE OR REPLACE TRIGGER dcollectdb.dcctc_id_trg BEFORE
    INSERT ON dcollectdb.dc_contact
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := dcollectdb.dcctc_id_seq.nextval;
END;

CREATE OR REPLACE TRIGGER dcollectdb.dcctc_upd_trg BEFORE
    UPDATE ON dcollectdb.dc_contact
    FOR EACH ROW
BEGIN
    SELECT
        SYSDATE
    INTO :new.update_timestamp
    FROM
        sys.dual;
END;

CREATE TABLE dcollectdb.dc_contact_x_dealer (
    dc_contact_id   INTEGER
        CONSTRAINT nnc_ctxgrp_om_contact_id NOT NULL,
    dc_dealer_id    INTEGER
        CONSTRAINT nnc_ctxgrp_dc_contact_grou NOT NULL
);

ALTER TABLE dcollectdb.dc_contact_x_dealer ADD CONSTRAINT dc_contact_x_dealer_pk PRIMARY KEY ( dc_contact_id,
                                                                                               dc_dealer_id );

--here

CREATE TABLE dcollectdb.dc_contact_x_terchief (
    dc_contact_id    INTEGER
        CONSTRAINT nnc_ctxgrp_dc_contact_id NOT NULL,
    dc_terchief_id   INTEGER
        CONSTRAINT nnc_ctxgrp_dc_dealer_id NOT NULL
);

ALTER TABLE dcollectdb.dc_contact_x_terchief ADD CONSTRAINT dc_contact_x_terchief_pk PRIMARY KEY ( dc_contact_id,
                                                                                                   dc_terchief_id );

CREATE TABLE dcollectdb.dc_dealer_group (
    id                    INTEGER
        CONSTRAINT nnc_ctcgrp_id NOT NULL,
    name                  VARCHAR2(50 CHAR)
        CONSTRAINT nnc_ctcgrp_name NOT NULL,
    dc_record_status_id   INTEGER
        CONSTRAINT nnc_ctcgrp_dc_record_statu NOT NULL,
    create_timestamp      TIMESTAMP DEFAULT current_timestamp
        CONSTRAINT nnc_ctcgrp_create_timestam NOT NULL,
    update_timestamp      TIMESTAMP
);

ALTER TABLE dcollectdb.dc_dealer_group ADD CONSTRAINT dc_dealer_group_pk PRIMARY KEY ( id );

ALTER TABLE dcollectdb.dc_dealer_group ADD CONSTRAINT ctcgrp_un1 UNIQUE ( name );

ALTER TABLE dcollectdb.dc_dealer_group
    ADD CONSTRAINT ctcgrp_recst_fk1 FOREIGN KEY ( dc_record_status_id )
        REFERENCES dcollectdb.dc_record_status ( id );

CREATE OR REPLACE TRIGGER dcollectdb.ctcgrp_id_trg BEFORE
    INSERT ON dcollectdb.dc_dealer_group
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := dcollectdb.ctcgrp_id_seq.nextval;
END;

CREATE OR REPLACE TRIGGER dcollectdb.ctcgrp_upd_trg BEFORE
    UPDATE ON dcollectdb.dc_dealer_group
    FOR EACH ROW
BEGIN
    SELECT
        SYSDATE
    INTO :new.update_timestamp
    FROM
        sys.dual;
END;

ALTER TABLE dcollectdb.dc_dealer ADD dc_dealer_group_id INTEGER;

ALTER TABLE dcollectdb.dc_dealer
    ADD CONSTRAINT dcdeal_ctcgrp_fk4 FOREIGN KEY ( dc_dealer_group_id )
        REFERENCES dcollectdb.dc_dealer_group ( id );

ALTER TABLE  dcollectdb.dc_dealer ADD dc_terchief_id INTEGER;

ALTER TABLE dcollectdb.dc_dealer
    ADD CONSTRAINT dcdeal_dcterc_fk5 FOREIGN KEY ( dc_terchief_id )
        REFERENCES dcollectdb.dc_terchief ( id );

GRANT ALL PRIVILEGES ON dcollectdb.DC_DEALER_GROUP to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.DC_CONTACT to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.DC_CONTACT_X_DEALER to dcollectadm;
GRANT ALL PRIVILEGES ON dcollectdb.DC_CONTACT_X_TERCHIEF to dcollectadm; 



DELETE FROM DCOLLECTDB.DC_USER_X_ROLE;

/*
 * LDAP Groups
 */
DELETE FROM DCOLLECTDB.DC_LDAP_GROUP;
INSERT INTO DCOLLECTDB.DC_LDAP_GROUP
(ID, NAME, LDAP_ID, DC_RECORD_STATUS_ID)
VALUES(4, 'TI_HDM_HCL', 'TI_HDM_HCL', 1);
INSERT INTO DCOLLECTDB.DC_LDAP_GROUP
(ID, NAME, LDAP_ID, DC_RECORD_STATUS_ID)
VALUES(3, 'AM_HDM_DL_DACO_ADM', 'AM_HDM_DL_DACO_ADM', 1);

/*
 * User Roles
 */
DELETE FROM DCOLLECTDB.DC_ROLE;
INSERT INTO DCOLLECTDB.DC_ROLE
(ID, NAME, DESCRIPTION, DC_RECORD_STATUS_ID)
VALUES(1, 'ADMIN', NULL, 1);

/*
 * Groups X Roles
 */
DELETE FROM DCOLLECTDB.DC_LDAPG_X_ROLE;
INSERT INTO DCOLLECTDB.DC_LDAPG_X_ROLE
(DC_LDAP_GROUP_ID, DC_ROLE_ID)
VALUES(3, 1);
INSERT INTO DCOLLECTDB.DC_LDAPG_X_ROLE
(DC_LDAP_GROUP_ID, DC_ROLE_ID)
VALUES(4, 1);


COMMIT;